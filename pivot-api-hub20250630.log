info: System information {
  'process.pid': 7,
  'process.ppid': 1,
  'process.platform': 'linux',
  'process.arch': 'x64',
  'process.versions': {
    node: '18.5.0',
    v8: '10.2.154.4-node.8',
    uv: '1.43.0',
    zlib: '1.2.11',
    brotli: '1.0.9',
    ares: '1.18.1',
    modules: '108',
    nghttp2: '1.47.0',
    napi: '8',
    llhttp: '6.0.7',
    openssl: '3.0.5+quic',
    cldr: '41.0',
    icu: '71.1',
    tz: '2022a',
    unicode: '14.0',
    ngtcp2: '0.1.0-DEV',
    nghttp3: '0.1.0-DEV',
    pkg: '5.8.1'
  },
  'os.userInfo()': {
    uid: 0,
    gid: 0,
    username: 'root',
    homedir: '/root',
    shell: '/bin/bash'
  }
}
info: Entrypoint { entrypoints: null }
info: #discoverMongoose ENSAAS_SERVICES. { name: 'mongodb' }
info: #discoverMongoose MONGODB_URL {
  MONGODB_URL: 'mongodb://3e944efc-8f48-4863-8cf1-b4e7aa75f263:D9F3qNfHK6a95jjJkwzDkh0h@10.32.9.4:27017,10.32.9.5:27017,10.32.9.6:27017/49c6f7ef-cc93-4751-abc1-4cc0d2ed53f5?replicaSet=rs0&replicaSet=rs0'
}
info: #mongoose.connect
info: Proxy {
  PATH: '/ensaas-sso',
  WISE_PAAS_SSO_API_URL: 'http://api.sso.solarscada.en.internal/v4.0',
  SSOUrl: URL {
    href: 'http://api.sso.solarscada.en.internal/v4.0',
    origin: 'http://api.sso.solarscada.en.internal',
    protocol: 'http:',
    username: '',
    password: '',
    host: 'api.sso.solarscada.en.internal',
    hostname: 'api.sso.solarscada.en.internal',
    port: '',
    pathname: '/v4.0',
    search: '',
    searchParams: URLSearchParams {},
    hash: ''
  }
}
info: Network interface eth0 gateway IP { eth0GatewayIP: '10.32.13.1' }
info: Gateway Server listening on { GATEWAY_PORT: 80 }
info: Waiting for first readiness check ...
info: #MongooseDatabase._conn #dbConn open
info: First readiness check triggered
info: #TntRegisterWatcher Service initRegister!
info: NewRegister { name: 'pivot-api-hub' }
info: NewRegister { name: 'pivot-enabler' }
InternalServerError: Etcd is not healthy
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at health (/snapshot/app/dist/gatewayApp.js)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
    at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7)
    at etag (/snapshot/app/node_modules/koa-etag/index.js:27:5)
    at /snapshot/app/node_modules/koa-conditional-get/index.js:15:5
    at /snapshot/app/dist/gatewayApp.js {
  status: 500
}
info: NewRegister { name: 'ifp-tenant' }
info: #TntServiceRegister Secret Watcher put { key: 'pivot-api-hub', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'ifp-tenant', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'pivot-api-hub', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'ifp-tenant', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'ifp-tenant', secret: true }
info: (Tenant) Service registered {
  name: 'pivot-api-hub',
  version: '2.9.1',
  sid: '2025-03-15T04:57:47.324Z'
}
info: (Tenant) Service secret ready
info: ElectionChanged { name: 'pivot-api-hub', value: '2.9.1/2025-03-15T04:57:47.324Z' }
info: #RegisterWatcher Service initRegister!
info: NewRegister { name: 'ifp-api-hub' }
info: #TntServiceRegister Secret Watcher put { key: 'ifp-tenant', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'pivot-api-hub', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'pivot-api-hub', secret: true }
info: #TntServiceRegister Secret Watcher put { key: 'ifp-tenant', secret: true }
info: EtcdLauncher Service registered {
  name: 'ifp-api-hub',
  version: '2.9.1',
  sid: '2025-03-15T04:58:24.488Z'
}
info: EtcdLauncher iApp registered { name: 'RTM', version: '2.15.2', sid: '2025-03-15T04:58:24.703Z' }
ServiceUnavailableError: Service Unavailable
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at graphqlApi (/snapshot/app/dist/gatewayApp.js)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-router/lib/router.js:372:16
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-compose/index.js:34:12
    at dispatch (/snapshot/app/node_modules/koa-router/lib/router.js:377:31)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  reloadErr: undefined,
  serviceList: undefined,
  blockedServiceList: [],
  status: 503
}
info: #ServiceRegister Secret Watcher put { key: 'ifp-calculator', secret: true }
info: #ServiceRegister Secret Watcher put { key: 'ifp-api-hub', secret: true }
info: #ServiceRegister Secret Watcher put { key: 'ifp-enabler', secret: true }
info: #ServiceRegister Secret Watcher put { key: 'ifp-data-hub', secret: true }
ServiceUnavailableError: Service Unavailable
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at graphqlApi (/snapshot/app/dist/gatewayApp.js)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-router/lib/router.js:372:16
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-compose/index.js:34:12
    at dispatch (/snapshot/app/node_modules/koa-router/lib/router.js:377:31)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  reloadErr: undefined,
  serviceList: undefined,
  blockedServiceList: [],
  status: 503
}
info: IAppRegister IfpHomeLayoutChanged recoverLease start
info: EtcdLauncher startIfpLogoTask success.
info: EtcdLauncher startIfpHomeLayoutTask success.
info: IAppRegister IfpHomeLayoutChanged recoverLease success.
ServiceUnavailableError: Service Unavailable
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at graphqlApi (/snapshot/app/dist/gatewayApp.js)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-router/lib/router.js:372:16
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-compose/index.js:34:12
    at dispatch (/snapshot/app/node_modules/koa-router/lib/router.js:377:31)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  reloadErr: undefined,
  serviceList: undefined,
  blockedServiceList: [],
  status: 503
}
info: NewRegister { name: 'api-portal-wise-mplus' }
info: NewRegister { name: 'api-portal-wise-mplus' }
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
ServiceUnavailableError: Service Unavailable
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at graphqlApi (/snapshot/app/dist/gatewayApp.js)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-router/lib/router.js:372:16
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-compose/index.js:34:12
    at dispatch (/snapshot/app/node_modules/koa-router/lib/router.js:377:31)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  reloadErr: undefined,
  serviceList: undefined,
  blockedServiceList: [],
  status: 503
}
ServiceUnavailableError: Service Unavailable
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at graphqlApi (/snapshot/app/dist/gatewayApp.js)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-router/lib/router.js:372:16
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-compose/index.js:34:12
    at dispatch (/snapshot/app/node_modules/koa-router/lib/router.js:377:31)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  reloadErr: undefined,
  serviceList: undefined,
  blockedServiceList: [],
  status: 503
}
ServiceUnavailableError: Service Unavailable
    at Object.throw (/snapshot/app/node_modules/koa/lib/context.js:97:11)
    at graphqlApi (/snapshot/app/dist/gatewayApp.js)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-router/lib/router.js:372:16
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at /snapshot/app/node_modules/koa-compose/index.js:34:12
    at dispatch (/snapshot/app/node_modules/koa-router/lib/router.js:377:31)
    at dispatch (/snapshot/app/node_modules/koa-compose/index.js:42:32)
    at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  reloadErr: undefined,
  serviceList: undefined,
  blockedServiceList: [],
  status: 503
}
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: NewRegister { name: 'api-plugin-deviceon-bi' }
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: NewRegister { name: 'ifp-data-hub-inbound' }
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[ifp-enabler] Type "DownSampledTagValue" is an extension type, but there is no type definition for "DownSampledTagValue" in any subgraph.
	[ifp-enabler] Type "TagValue" is an extension type, but there is no type definition for "TagValue" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[ifp-enabler] Type "DownSampledTagValue" is an extension type, but there is no type definition for "DownSampledTagValue" in any subgraph.\n' +
    '\t[ifp-enabler] Type "TagValue" is an extension type, but there is no type definition for "TagValue" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL8glxLi42M_kS__'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[ifp-enabler] Type "DownSampledTagValue" is an extension type, but there is no type definition for "DownSampledTagValue" in any subgraph.
	[ifp-enabler] Type "TagValue" is an extension type, but there is no type definition for "TagValue" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[ifp-enabler] Type "DownSampledTagValue" is an extension type, but there is no type definition for "DownSampledTagValue" in any subgraph.\n' +
    '\t[ifp-enabler] Type "TagValue" is an extension type, but there is no type definition for "TagValue" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: #MongooseDatabase._conn #dbConn open
info: #MongooseDatabase._conn #dbConn open
info: #MongooseDatabase._conn #dbConn open
info: ElectionChanged { name: 'DPM', value: undefined }
info: NewRegister { name: 'DPM' }
info: #MongooseDatabase._conn #dbConn open
info: #MongooseDatabase._conn #dbConn open
info: #MongooseDatabase._conn #dbConn open
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: NewRegister { name: 'wise-mplus-notification' }
info: ElectionChanged { name: 'api-alarm-wise-mplus', value: undefined }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: NewRegister { name: 'api-alarm-wise-mplus' }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js,
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js,
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: NewRegister { name: 'api-org-wise-mplus' }
info: ElectionChanged {
  name: 'api-org-wise-mplus',
  value: '2.1.18/2025-04-30T07:56:08.109Z'
}
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: NewRegister { name: 'api-portal-wise-mplus' }
info: NewRegister { name: 'api-portal-wise-mplus' }
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-19T17:55:25.318Z'
}
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-19T17:55:23.837Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: ElectionChanged { name: 'wise-mplus-notification', value: undefined }
error: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql Request aborted as it took longer than 5000ms
info: API Hub gatewayApp reload { reloadRetryCount: 0, serviceList: [], blockedServiceList: [] }
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload Tried to load services from remote endpoints but none provided {
  stack: 'Error: Tried to load services from remote endpoints but none provided\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:65)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:50)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: ElectionChanged { name: 'ifp-release-notes', value: undefined }
error: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql Request aborted as it took longer than 5000ms
info: API Hub gatewayApp reload { reloadRetryCount: 1, serviceList: [], blockedServiceList: [] }
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload Tried to load services from remote endpoints but none provided {
  stack: 'Error: Tried to load services from remote endpoints but none provided\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:65)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:50)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
error: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql Request aborted as it took longer than 5000ms
info: API Hub gatewayApp reload { reloadRetryCount: 2, serviceList: [], blockedServiceList: [] }
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload Tried to load services from remote endpoints but none provided {
  stack: 'Error: Tried to load services from remote endpoints but none provided\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:65)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:50)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
error: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql Request aborted as it took longer than 5000ms
error: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql Request aborted as it took longer than 5000ms
info: API Hub gatewayApp reload { reloadRetryCount: 3, serviceList: [], blockedServiceList: [] }
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload Tried to load services from remote endpoints but none provided {
  stack: 'Error: Tried to load services from remote endpoints but none provided\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:65)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:50)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: ElectionChanged { name: 'api-profile-server-mplus', value: undefined }
info: ElectionChanged { name: 'api-forwarding-deviceon-bi', value: undefined }
info: ElectionChanged { name: 'api-org-wise-mplus', value: undefined }
info: ElectionChanged { name: 'ifp-calculator', value: undefined }
info: ElectionChanged { name: 'api-datapacker-wise-mplus', value: undefined }
info: ElectionChanged { name: 'dc-import-export-service', value: undefined }
info: ElectionChanged { name: 'ifp-enabler', value: undefined }
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 1,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 2,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 3,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 4,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 5,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 6,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketOnEnd (node:_http_client:489:9)
        at Socket.emit (node:events:549:35)
        at endReadableNT (node:internal/streams/readable:1359:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNRESET',
      code: 'ECONNRESET'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketOnEnd (node:_http_client:489:9)
        at Socket.emit (node:events:549:35)
        at endReadableNT (node:internal/streams/readable:1359:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNRESET',
      code: 'ECONNRESET'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketOnEnd (node:_http_client:489:9)
        at Socket.emit (node:events:549:35)
        at endReadableNT (node:internal/streams/readable:1359:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNRESET',
      code: 'ECONNRESET'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketOnEnd (node:_http_client:489:9)
        at Socket.emit (node:events:549:35)
        at endReadableNT (node:internal/streams/readable:1359:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNRESET',
      code: 'ECONNRESET'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: socket hang up
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketOnEnd (node:_http_client:489:9)
        at Socket.emit (node:events:549:35)
        at endReadableNT (node:internal/streams/readable:1359:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNRESET',
      code: 'ECONNRESET'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql request to http://api-portal-wise-mplus/graphql?query=%7B__typename%7D failed, reason: connect ECONNREFUSED 10.0.143.144:80 {
  type: 'system',
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  stack: 'FetchError: request to http://api-portal-wise-mplus/graphql?query=%7B__typename%7D failed, reason: connect ECONNREFUSED 10.0.143.144:80\n' +
    '    at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)\n' +
    '    at ClientRequest.emit (node:events:537:28)\n' +
    '    at Socket.socketErrorListener (node:_http_client:465:9)\n' +
    '    at Socket.emit (node:events:537:28)\n' +
    '    at emitErrorNT (node:internal/streams/destroy:151:8)\n' +
    '    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 7,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-alarm-wise-mplus] Type "HighLowEvent" is an extension type, but there is no type definition for "HighLowEvent" in any subgraph.
	[api-alarm-wise-mplus] Type "AlarmCodeEvent" is an extension type, but there is no type definition for "AlarmCodeEvent" in any subgraph.
	[api-dbmaster-wise-mplus] Type "Tag" is an extension type, but there is no type definition for "Tag" in any subgraph.
	[ifp-pre-process] Type "Machine" is an extension type, but there is no type definition for "Machine" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "Parameter" is an extension type, but there is no type definition for "Parameter" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.
	[ifp-pre-process] Type "Me" is an extension type, but there is no type definition for "Me" in any subgraph.
	[ifp-pre-process] Type "Role" is an extension type, but there is no type definition for "Role" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-alarm-wise-mplus] Type "HighLowEvent" is an extension type, but there is no type definition for "HighLowEvent" in any subgraph.\n' +
    '\t[api-alarm-wise-mplus] Type "AlarmCodeEvent" is an extension type, but there is no type definition for "AlarmCodeEvent" in any subgraph.\n' +
    '\t[api-dbmaster-wise-mplus] Type "Tag" is an extension type, but there is no type definition for "Tag" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Machine" is an extension type, but there is no type definition for "Machine" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Parameter" is an extension type, but there is no type definition for "Parameter" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Me" is an extension type, but there is no type definition for "Me" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Role" is an extension type, but there is no type definition for "Role" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: connect ECONNREFUSED 10.0.143.144:80
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: connect ECONNREFUSED 10.0.143.144:80
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketErrorListener (node:_http_client:465:9)
        at Socket.emit (node:events:537:28)
        at emitErrorNT (node:internal/streams/destroy:151:8)
        at emitErrorCloseNT (node:internal/streams/destroy:116:3)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNREFUSED',
      code: 'ECONNREFUSED'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: connect ECONNREFUSED 10.0.143.144:80
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: connect ECONNREFUSED 10.0.143.144:80
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketErrorListener (node:_http_client:465:9)
        at Socket.emit (node:events:537:28)
        at emitErrorNT (node:internal/streams/destroy:151:8)
        at emitErrorCloseNT (node:internal/streams/destroy:116:3)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNREFUSED',
      code: 'ECONNREFUSED'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: request to http://api-portal-wise-mplus/graphql failed, reason: connect ECONNREFUSED 10.0.143.144:80
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: FetchError: request to http://api-portal-wise-mplus/graphql failed, reason: connect ECONNREFUSED 10.0.143.144:80
        at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)
        at ClientRequest.emit (node:events:537:28)
        at Socket.socketErrorListener (node:_http_client:465:9)
        at Socket.emit (node:events:537:28)
        at emitErrorNT (node:internal/streams/destroy:151:8)
        at emitErrorCloseNT (node:internal/streams/destroy:116:3)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      type: 'system',
      errno: 'ECONNREFUSED',
      code: 'ECONNREFUSED'
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql request to http://api-portal-wise-mplus/graphql?query=%7B__typename%7D failed, reason: connect ECONNREFUSED 10.0.143.144:80 {
  type: 'system',
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  stack: 'FetchError: request to http://api-portal-wise-mplus/graphql?query=%7B__typename%7D failed, reason: connect ECONNREFUSED 10.0.143.144:80\n' +
    '    at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)\n' +
    '    at ClientRequest.emit (node:events:537:28)\n' +
    '    at Socket.socketErrorListener (node:_http_client:465:9)\n' +
    '    at Socket.emit (node:events:537:28)\n' +
    '    at emitErrorNT (node:internal/streams/destroy:151:8)\n' +
    '    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 8,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-alarm-wise-mplus] Type "HighLowEvent" is an extension type, but there is no type definition for "HighLowEvent" in any subgraph.
	[api-alarm-wise-mplus] Type "AlarmCodeEvent" is an extension type, but there is no type definition for "AlarmCodeEvent" in any subgraph.
	[api-dbmaster-wise-mplus] Type "Tag" is an extension type, but there is no type definition for "Tag" in any subgraph.
	[ifp-pre-process] Type "Machine" is an extension type, but there is no type definition for "Machine" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "Parameter" is an extension type, but there is no type definition for "Parameter" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.
	[ifp-pre-process] Type "Me" is an extension type, but there is no type definition for "Me" in any subgraph.
	[ifp-pre-process] Type "Role" is an extension type, but there is no type definition for "Role" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-alarm-wise-mplus] Type "HighLowEvent" is an extension type, but there is no type definition for "HighLowEvent" in any subgraph.\n' +
    '\t[api-alarm-wise-mplus] Type "AlarmCodeEvent" is an extension type, but there is no type definition for "AlarmCodeEvent" in any subgraph.\n' +
    '\t[api-dbmaster-wise-mplus] Type "Tag" is an extension type, but there is no type definition for "Tag" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Machine" is an extension type, but there is no type definition for "Machine" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Parameter" is an extension type, but there is no type definition for "Parameter" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Me" is an extension type, but there is no type definition for "Me" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Role" is an extension type, but there is no type definition for "Role" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: NewRegister { name: 'api-portal-wise-mplus' }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 9,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 10,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 11,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 12,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-21T02:20:23.836Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 1,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: ElectionChanged { name: 'DPM', value: undefined }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 2,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 3,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 4,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 5,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 6,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 7,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 8,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 9,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 10,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 11,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 12,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 13,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 14,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 15,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 16,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 17,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
warn: TntServiceRegister Lease lost {
  err: EtcdLeaseInvalidError: Lease We lost connection to etcd and our lease has expired. is expired or revoked
      at Lease.keepalive (/snapshot/app/node_modules/etcd3/lib/lease.js:222:31)
      at Timeout._onTimeout (/snapshot/app/node_modules/etcd3/lib/lease.js:273:35)
      at listOnTimeout (node:internal/timers:564:17)
      at processTimers (node:internal/timers:507:7)
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 18,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 19,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 20,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 21,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 22,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: NewRegister { name: 'api-forwarding-deviceon-bi' }
error: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql request to http://api-portal-wise-mplus/graphql?query=%7B__typename%7D failed, reason: connect ECONNREFUSED 10.0.143.144:80 {
  type: 'system',
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  stack: 'FetchError: request to http://api-portal-wise-mplus/graphql?query=%7B__typename%7D failed, reason: connect ECONNREFUSED 10.0.143.144:80\n' +
    '    at ClientRequest.<anonymous> (/snapshot/app/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1491:11)\n' +
    '    at ClientRequest.emit (node:events:537:28)\n' +
    '    at Socket.socketErrorListener (node:_http_client:465:9)\n' +
    '    at Socket.emit (node:events:537:28)\n' +
    '    at emitErrorNT (node:internal/streams/destroy:151:8)\n' +
    '    at emitErrorCloseNT (node:internal/streams/destroy:116:3)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-alarm-wise-mplus] Type "HighLowEvent" is an extension type, but there is no type definition for "HighLowEvent" in any subgraph.
	[api-alarm-wise-mplus] Type "AlarmCodeEvent" is an extension type, but there is no type definition for "AlarmCodeEvent" in any subgraph.
	[api-dbmaster-wise-mplus] Type "Tag" is an extension type, but there is no type definition for "Tag" in any subgraph.
	[ifp-pre-process] Type "Machine" is an extension type, but there is no type definition for "Machine" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "Parameter" is an extension type, but there is no type definition for "Parameter" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.
	[ifp-pre-process] Type "Me" is an extension type, but there is no type definition for "Me" in any subgraph.
	[ifp-pre-process] Type "Role" is an extension type, but there is no type definition for "Role" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-alarm-wise-mplus] Type "HighLowEvent" is an extension type, but there is no type definition for "HighLowEvent" in any subgraph.\n' +
    '\t[api-alarm-wise-mplus] Type "AlarmCodeEvent" is an extension type, but there is no type definition for "AlarmCodeEvent" in any subgraph.\n' +
    '\t[api-dbmaster-wise-mplus] Type "Tag" is an extension type, but there is no type definition for "Tag" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Machine" is an extension type, but there is no type definition for "Machine" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Parameter" is an extension type, but there is no type definition for "Parameter" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Me" is an extension type, but there is no type definition for "Me" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "Role" is an extension type, but there is no type definition for "Role" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: NewRegister { name: 'api-portal-wise-mplus' }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 1,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 2,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 3,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 4,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-21T02:22:53.838Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: NewRegister { name: 'ifp-release-notes' }
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: NewRegister { name: 'DPM' }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 1,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 2,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 3,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload A valid schema couldn't be composed. The following composition errors were found:
	[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.
	[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.
	[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.
	[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.
	[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph. {
  stack: "Error: A valid schema couldn't be composed. The following composition errors were found:\n" +
    '\t[api-portal-wise-mplus] Type "MachineStatus" is an extension type, but there is no type definition for "MachineStatus" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "ParameterMappingCode" is an extension type, but there is no type definition for "ParameterMappingCode" in any subgraph.\n' +
    '\t[api-portal-wise-mplus] Type "Tenant" is an extension type, but there is no type definition for "Tenant" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ParameterMappingRule" is an extension type, but there is no type definition for "ParameterMappingRule" in any subgraph.\n' +
    '\t[ifp-pre-process] Type "ApiInfo" is an extension type, but there is no type definition for "ApiInfo" in any subgraph.\n' +
    '    at IntrospectAndCompose.createSupergraphFromSubgraphList (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)\n' +
    '    at ApolloServer.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:142:16)\n' +
    '    at getMiddleware (/snapshot/app/dist/gatewayApp.js)'
}
info: NewRegister { name: 'api-datapacker-wise-mplus' }
info: NewRegister { name: 'api-profile-server-mplus' }
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: NewRegister { name: 'dc-import-export-service' }
info: NewRegister { name: 'ifp-calculator' }
info: #ServiceRegister Secret Watcher put { key: 'ifp-calculator', secret: true }
info: NewRegister { name: 'wise-mplus-notification' }
info: NewRegister { name: 'api-org-wise-mplus' }
info: NewRegister { name: 'ifp-enabler' }
info: #ServiceRegister Secret Watcher put { key: 'ifp-enabler', secret: true }
info: IAppRegister IfpHomeLayoutChanged recoverLease start
info: EtcdLauncher startIfpLogoTask success.
info: EtcdLauncher startIfpHomeLayoutTask success.
info: IAppRegister IfpHomeLayoutChanged recoverLease success.
info: NewRegister { name: 'api-portal-wise-mplus' }
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-21T02:25:24.023Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: #TntRegisterWatcher Watcher disconnected!
info: #TntServiceRegister Secret Watcher disconnected!
info: #TntRegisterWatcher Watcher disconnected!
info: #TntServiceRegister Secret Watcher disconnected!
info: #TntServiceRegister Secret Watcher connected!
info: #TntRegisterWatcher Watcher connected!
info: #TntRegisterWatcher Service releaseRegister!
info: #TntRegisterWatcher Service initRegister!
error: API Hub gatewayApp reload Couldn't load service definitions for "api-profile-server-mplus" at http://api-profile-server-mplus/graphql: request to http://api-profile-server-mplus/graphql failed, reason: read ETIMEDOUT {
  stack: `Error: Couldn't load service definitions for "api-profile-server-mplus" at http://api-profile-server-mplus/graphql: request to http://api-profile-server-mplus/graphql failed, reason: read ETIMEDOUT\n` +
    '    at /snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at async Promise.all (index 6)\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 1,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload Couldn't load service definitions for "wise-mplus-notification" at http://wise-mplus-notification/graphql: request to http://wise-mplus-notification/graphql failed, reason: read ECONNRESET {
  stack: `Error: Couldn't load service definitions for "wise-mplus-notification" at http://wise-mplus-notification/graphql: request to http://wise-mplus-notification/graphql failed, reason: read ECONNRESET\n` +
    '    at /snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at async Promise.all (index 12)\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)'
}
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 2,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
error: API Hub gatewayApp reload Couldn't load service definitions for "api-profile-server-mplus" at http://api-profile-server-mplus/graphql: request to http://api-profile-server-mplus/graphql failed, reason: read ETIMEDOUT {
  stack: `Error: Couldn't load service definitions for "api-profile-server-mplus" at http://api-profile-server-mplus/graphql: request to http://api-profile-server-mplus/graphql failed, reason: read ETIMEDOUT\n` +
    '    at /snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at async Promise.all (index 6)\n' +
    '    at loadServicesFromRemoteEndpoint (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/loadServicesFromRemoteEndpoint.js)\n' +
    '    at IntrospectAndCompose.updateSupergraphSdl (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at IntrospectAndCompose.initialize (/snapshot/app/node_modules/@apollo/gateway/dist/supergraphManagers/IntrospectAndCompose/index.js)\n' +
    '    at ApolloGateway.initializeSupergraphManager (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at ApolloGateway.load (/snapshot/app/node_modules/@apollo/gateway/dist/index.js)\n' +
    '    at SchemaManager.start (/snapshot/app/node_modules/@apollo/server/dist/cjs/utils/schemaManager.js:37:28)\n' +
    '    at ApolloServer._start (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:164:30)'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 3,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js
      at async Promise.all (index 4)
      at createContext (/snapshot/app/dist/gatewayApp.js)
      at context (/snapshot/app/dist/gatewayApp.js)
      at ApolloServer.executeHTTPGraphQLRequest (/snapshot/app/node_modules/@apollo/server/dist/cjs/ApolloServer.js:514:32)
      at /snapshot/app/node_modules/@as-integrations/koa/dist/index.js:33:43
      at bodyParser (/snapshot/app/node_modules/koa-bodyparser/index.js:91:5)
      at logger (/snapshot/app/node_modules/koa-logger/index.js:67:7),
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: NewRegister { name: 'api-portal-wise-mplus' }
info: NewRegister { name: 'api-portal-wise-mplus' }
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-28T07:47:19.508Z'
}
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-28T07:47:17.949Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction tenantPromise {
  err: TenantNotFoundError: Could not resolve to a tenant with the id of 'VGVuYW50.ZL-JhhLi42M_kTQP'
      at TenantService.loadById (/snapshot/app/dist/services/tenant/TenantService.js)
      at processTicksAndRejections (node:internal/process/task_queues:95:5)
      at /snapshot/app/dist/gatewayApp.js,
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: NewRegister { name: 'api-portal-wise-mplus' }
info: NewRegister { name: 'api-portal-wise-mplus' }
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-28T08:25:10.738Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-05-28T08:25:12.411Z'
}
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: ElectionChanged { name: 'api-org-wise-mplus', value: undefined }
info: NewRegister { name: 'api-org-wise-mplus' }
info: ElectionChanged { name: 'api-org-wise-mplus', value: undefined }
info: NewRegister { name: 'api-org-wise-mplus' }
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: NewRegister { name: 'api-datapacker-wise-mplus' }
info: ElectionChanged {
  name: 'api-datapacker-wise-mplus',
  value: '2.1.18/2025-06-04T06:27:15Z'
}
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
info: ElectionChanged { name: 'api-dbmaster-wise-mplus', value: undefined }
info: NewRegister { name: 'api-dbmaster-wise-mplus' }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: 'dc-import-export-service'
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: 'dc-import-export-service'
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: 'dc-import-export-service'
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: 'dc-import-export-service'
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: 'dc-import-export-service'
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: 'dc-import-export-service'
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
warn: ContextFunction userPromise {
  err: ApolloError: Response not successful: Received status code 401
      at new ApolloError (/snapshot/app/node_modules/@apollo/client/errors/errors.cjs)
      at Object.error (/snapshot/app/node_modules/@apollo/client/core/core.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at Object.error (/snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs)
      at notifySubscription (/snapshot/app/node_modules/zen-observable/lib/Observable.js:140:18)
      at onNotify (/snapshot/app/node_modules/zen-observable/lib/Observable.js:179:3)
      at SubscriptionObserver.error (/snapshot/app/node_modules/zen-observable/lib/Observable.js:240:7)
      at /snapshot/app/node_modules/@apollo/client/utilities/utilities.cjs {
    graphQLErrors: [],
    clientErrors: [],
    networkError: Error [ServerError]: Response not successful: Received status code 401
        at Object.throwServerError (/snapshot/app/node_modules/@apollo/client/link/utils/utils.cjs)
        at /snapshot/app/node_modules/@apollo/client/link/http/http.cjs
        at processTicksAndRejections (node:internal/process/task_queues:95:5) {
      response: Response {
        size: 0,
        timeout: 0,
        [Symbol(Body internals)]: {
          body: PassThrough {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: true,
            [Symbol(kCapture)]: false,
            [Symbol(kCallback)]: null
          },
          disturbed: true,
          error: null
        },
        [Symbol(Response internals)]: {
          url: 'http://api-portal-wise-mplus/graphql',
          status: 401,
          statusText: 'Unauthorized',
          headers: Headers { [Symbol(map)]: [Object: null prototype] },
          counter: 0
        }
      },
      statusCode: 401,
      result: { result: 'token invalid' }
    },
    extraInfo: undefined
  },
  ingressServiceName: ''
}
info: NewRegister { name: 'api-portal-wise-mplus' }
info: NewRegister { name: 'api-portal-wise-mplus' }
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-06-30T03:00:24.327Z'
}
info: ElectionChanged {
  name: 'api-portal-wise-mplus',
  value: '2.1.18/2025-06-30T03:00:22.717Z'
}
info: #ServiceRegister Secret Watcher put { key: 'api-portal-wise-mplus', secret: true }
info: API Hub gatewayApp healthCheck [ifp-pre-process]: http://pivot-pre-process/graphql status: 200
info: API Hub gatewayApp healthCheck [api-subscribe-deviceon-bi]: http://api-subscribe-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-alarm-wise-mplus]: http://api-alarm-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-plugin-deviceon-bi]: http://api-plugin-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-forwarding-deviceon-bi]: http://api-forwarding-deviceon-bi/graphql status: 200
info: API Hub gatewayApp healthCheck [api-profile-server-mplus]: http://api-profile-server-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [dc-import-export-service]: http://dc-import-export-service/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-enabler]: http://pivot-enabler/graphql status: 200
info: API Hub gatewayApp healthCheck [ifp-calculator]: http://pivot-calculator/graphql status: 200
info: API Hub gatewayApp healthCheck [api-portal-wise-mplus]: http://api-portal-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [api-dbmaster-wise-mplus]: http://api-dbmaster-wise-mplus/graphql status: 200
info: API Hub gatewayApp healthCheck [wise-mplus-notification]: http://wise-mplus-notification/graphql status: 200
info: API Hub gatewayApp healthCheck [api-datapacker-wise-mplus]: http://api-datapacker-wise-mplus/query status: 200
info: API Hub gatewayApp reload {
  reloadRetryCount: 0,
  serviceList: [
    {
      name: 'ifp-pre-process',
      url: 'http://pivot-pre-process/graphql'
    },
    {
      name: 'api-subscribe-deviceon-bi',
      url: 'http://api-subscribe-deviceon-bi/graphql'
    },
    {
      name: 'api-portal-wise-mplus',
      url: 'http://api-portal-wise-mplus/graphql'
    },
    {
      name: 'api-plugin-deviceon-bi',
      url: 'http://api-plugin-deviceon-bi/graphql'
    },
    {
      name: 'api-alarm-wise-mplus',
      url: 'http://api-alarm-wise-mplus/graphql'
    },
    {
      name: 'api-forwarding-deviceon-bi',
      url: 'http://api-forwarding-deviceon-bi/graphql'
    },
    {
      name: 'api-datapacker-wise-mplus',
      url: 'http://api-datapacker-wise-mplus/query'
    },
    {
      name: 'api-profile-server-mplus',
      url: 'http://api-profile-server-mplus/graphql'
    },
    {
      name: 'dc-import-export-service',
      url: 'http://dc-import-export-service/graphql'
    },
    { name: 'ifp-calculator', url: 'http://pivot-calculator/graphql' },
    {
      name: 'wise-mplus-notification',
      url: 'http://wise-mplus-notification/graphql'
    },
    { name: 'ifp-enabler', url: 'http://pivot-enabler/graphql' },
    {
      name: 'api-dbmaster-wise-mplus',
      url: 'http://api-dbmaster-wise-mplus/graphql'
    }
  ],
  blockedServiceList: []
}
info: Apollo server config {
  apolloServerTracing: false,
  apolloServerIncludeStacktraceInErrorResponses: true
}
info: Gateway successfully loaded schema.
	* Mode: unmanaged
